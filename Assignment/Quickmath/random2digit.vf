////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : random2digit.vf
// /___/   /\     Timestamp : 12/14/2019 02:18:19
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Assignment/Quickmath/random2digit.vf -w C:/Assignment/Quickmath/random2digit.sch
//Design Name: random2digit
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module D4_16E_HXILINX_random2digit (D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, A0, A1, A2, A3, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;
   output D8;
   output D9;
   output D10;
   output D11;
   output D12;
   output D13;
   output D14;
   output D15;

   input  A0;
   input  A1;
   input  A2;
   input  A3;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;
   reg D8;
   reg D9;
   reg D10;
   reg D11;
   reg D12;
   reg D13;
   reg D14;
   reg D15;

      always @ (A0 or A1 or A2 or A3 or E)
      begin
         if(!E)
           {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0000;
        else
        begin
           case({A3,A2,A1,A0})
             4'b0000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0001;
             4'b0001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0010;
             4'b0010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0100;
             4'b0011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_1000;
             4'b0100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0001_0000;
             4'b0101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0010_0000;
             4'b0110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0100_0000;
             4'b0111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_1000_0000;
             4'b1000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0001_0000_0000;
             4'b1001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0010_0000_0000;
             4'b1010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0100_0000_0000;
             4'b1011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_1000_0000_0000;
             4'b1100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0001_0000_0000_0000;
             4'b1101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0010_0000_0000_0000;
             4'b1110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0100_0000_0000_0000;
             4'b1111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b1000_0000_0000_0000;
          endcase
        end
     end 

endmodule
`timescale 100 ps / 10 ps

module CB2RE_HXILINX_random2digit(CEO, Q0, Q1, TC, C, CE, R);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;
   
   input 	      C;	
   input 	      CE;	
   input 	      R;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C)
     begin
	if (R)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT); 
   
endmodule
`timescale  100 ps / 10 ps

module NOR6_HXILINX_random2digit (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = !(I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_random2digit (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 1ns / 1ps

module Div2_MUSER_random2digit(CLK_IN, 
                               CLK_OUT);

    input CLK_IN;
   output CLK_OUT;
   
   wire XLXN_34;
   wire XLXN_115;
   wire CLK_OUT_DUMMY;
   
   assign CLK_OUT = CLK_OUT_DUMMY;
   FDC  XLXI_5 (.C(CLK_IN), 
               .CLR(XLXN_115), 
               .D(XLXN_34), 
               .Q(CLK_OUT_DUMMY));
   INV  XLXI_10 (.I(CLK_OUT_DUMMY), 
                .O(XLXN_34));
   GND  XLXI_60 (.G(XLXN_115));
endmodule
`timescale 1ns / 1ps

module Hexto7seg_MUSER_random2digit(BCD, 
                                    CLK0, 
                                    CLK1, 
                                    Comm, 
                                    seg);

    input [3:0] BCD;
    input CLK0;
    input CLK1;
   output [3:0] Comm;
   output [6:0] seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_36;
   
   (* HU_SET = "XLXI_1_11" *) 
   D4_16E_HXILINX_random2digit  XLXI_1 (.A0(BCD[0]), 
                                       .A1(BCD[1]), 
                                       .A2(BCD[2]), 
                                       .A3(BCD[3]), 
                                       .E(XLXN_36), 
                                       .D0(XLXN_15), 
                                       .D1(XLXN_1), 
                                       .D2(XLXN_11), 
                                       .D3(XLXN_12), 
                                       .D4(XLXN_2), 
                                       .D5(XLXN_5), 
                                       .D6(XLXN_6), 
                                       .D7(XLXN_17), 
                                       .D8(), 
                                       .D9(XLXN_13), 
                                       .D10(XLXN_18), 
                                       .D11(XLXN_3), 
                                       .D12(XLXN_7), 
                                       .D13(XLXN_4), 
                                       .D14(XLXN_8), 
                                       .D15(XLXN_9));
   (* HU_SET = "XLXI_2_12" *) 
   NOR6_HXILINX_random2digit  XLXI_2 (.I0(XLXN_5), 
                                     .I1(XLXN_6), 
                                     .I2(XLXN_3), 
                                     .I3(XLXN_7), 
                                     .I4(XLXN_8), 
                                     .I5(XLXN_9), 
                                     .O(seg[1]));
   NOR4  XLXI_3 (.I0(XLXN_11), 
                .I1(XLXN_7), 
                .I2(XLXN_8), 
                .I3(XLXN_9), 
                .O(seg[2]));
   NOR5  XLXI_4 (.I0(XLXN_1), 
                .I1(XLXN_2), 
                .I2(XLXN_17), 
                .I3(XLXN_18), 
                .I4(XLXN_9), 
                .O(seg[3]));
   (* HU_SET = "XLXI_5_13" *) 
   NOR6_HXILINX_random2digit  XLXI_5 (.I0(XLXN_1), 
                                     .I1(XLXN_12), 
                                     .I2(XLXN_2), 
                                     .I3(XLXN_5), 
                                     .I4(XLXN_17), 
                                     .I5(XLXN_13), 
                                     .O(seg[4]));
   NOR5  XLXI_6 (.I0(XLXN_1), 
                .I1(XLXN_11), 
                .I2(XLXN_12), 
                .I3(XLXN_17), 
                .I4(XLXN_4), 
                .O(seg[5]));
   NOR4  XLXI_7 (.I0(XLXN_15), 
                .I1(XLXN_1), 
                .I2(XLXN_17), 
                .I3(XLXN_7), 
                .O(seg[6]));
   NOR4  XLXI_8 (.I0(XLXN_1), 
                .I1(XLXN_2), 
                .I2(XLXN_3), 
                .I3(XLXN_4), 
                .O(seg[0]));
   VCC  XLXI_23 (.P(XLXN_36));
   NAND2B2  XLXI_33 (.I0(CLK0), 
                    .I1(CLK1), 
                    .O(Comm[0]));
   NAND2B1  XLXI_34 (.I0(CLK1), 
                    .I1(CLK0), 
                    .O(Comm[1]));
   NAND2B1  XLXI_35 (.I0(CLK0), 
                    .I1(CLK1), 
                    .O(Comm[2]));
   NAND2  XLXI_36 (.I0(CLK0), 
                  .I1(CLK1), 
                  .O(Comm[3]));
endmodule
`timescale 1ns / 1ps

module random2digit(Button1, 
                    Button2, 
                    CLK, 
                    CLR, 
                    com, 
                    Q0, 
                    Q1, 
                    Q2, 
                    Q3, 
                    seg);

    input Button1;
    input Button2;
    input CLK;
    input CLR;
   output [3:0] com;
   output [3:0] Q0;
   output [3:0] Q1;
   output [3:0] Q2;
   output [3:0] Q3;
   output [6:0] seg;
   
   wire XLXN_8;
   wire XLXN_20;
   wire XLXN_23;
   wire [3:0] XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire [3:0] XLXN_56;
   wire XLXN_58;
   wire XLXN_60;
   wire [3:0] Q0_DUMMY;
   wire [3:0] Q1_DUMMY;
   wire [3:0] Q2_DUMMY;
   wire [3:0] Q3_DUMMY;
   
   assign Q0[3:0] = Q0_DUMMY[3:0];
   assign Q1[3:0] = Q1_DUMMY[3:0];
   assign Q2[3:0] = Q2_DUMMY[3:0];
   assign Q3[3:0] = Q3_DUMMY[3:0];
   counter1_13  XLXI_1 (.Clockk(XLXN_8), 
                       .CLRR(CLR), 
                       .Q(Q0_DUMMY[3:0]));
   counter1_13  XLXI_2 (.Clockk(XLXN_60), 
                       .CLRR(CLR), 
                       .Q(Q1_DUMMY[3:0]));
   AND2  XLXI_4 (.I0(Button1), 
                .I1(CLK), 
                .O(XLXN_8));
   counter1_13  XLXI_8 (.Clockk(XLXN_23), 
                       .CLRR(CLR), 
                       .Q(Q2_DUMMY[3:0]));
   Div2_MUSER_random2digit  XLXI_10 (.CLK_IN(XLXN_23), 
                                    .CLK_OUT(XLXN_20));
   AND2  XLXI_11 (.I0(Button2), 
                 .I1(CLK), 
                 .O(XLXN_23));
   (* HU_SET = "XLXI_17_14" *) 
   CB2RE_HXILINX_random2digit  XLXI_17 (.C(CLK), 
                                       .CE(XLXN_58), 
                                       .R(), 
                                       .CEO(), 
                                       .Q0(XLXN_46), 
                                       .Q1(XLXN_47), 
                                       .TC());
   VCC  XLXI_19_0 (.P(XLXN_56[0]));
   VCC  XLXI_19_1 (.P(XLXN_56[1]));
   VCC  XLXI_19_2 (.P(XLXN_56[2]));
   VCC  XLXI_19_3 (.P(XLXN_56[3]));
   (* HU_SET = "XLXI_21_0_18" *) 
   M4_1E_HXILINX_random2digit  XLXI_21_0 (.D0(Q0_DUMMY[0]), 
                                         .D1(Q1_DUMMY[0]), 
                                         .D2(Q2_DUMMY[0]), 
                                         .D3(Q3_DUMMY[0]), 
                                         .E(XLXN_56[0]), 
                                         .S0(XLXN_46), 
                                         .S1(XLXN_47), 
                                         .O(XLXN_45[0]));
   (* HU_SET = "XLXI_21_1_17" *) 
   M4_1E_HXILINX_random2digit  XLXI_21_1 (.D0(Q0_DUMMY[1]), 
                                         .D1(Q1_DUMMY[1]), 
                                         .D2(Q2_DUMMY[1]), 
                                         .D3(Q3_DUMMY[1]), 
                                         .E(XLXN_56[1]), 
                                         .S0(XLXN_46), 
                                         .S1(XLXN_47), 
                                         .O(XLXN_45[1]));
   (* HU_SET = "XLXI_21_2_16" *) 
   M4_1E_HXILINX_random2digit  XLXI_21_2 (.D0(Q0_DUMMY[2]), 
                                         .D1(Q1_DUMMY[2]), 
                                         .D2(Q2_DUMMY[2]), 
                                         .D3(Q3_DUMMY[2]), 
                                         .E(XLXN_56[2]), 
                                         .S0(XLXN_46), 
                                         .S1(XLXN_47), 
                                         .O(XLXN_45[2]));
   (* HU_SET = "XLXI_21_3_15" *) 
   M4_1E_HXILINX_random2digit  XLXI_21_3 (.D0(Q0_DUMMY[3]), 
                                         .D1(Q1_DUMMY[3]), 
                                         .D2(Q2_DUMMY[3]), 
                                         .D3(Q3_DUMMY[3]), 
                                         .E(XLXN_56[3]), 
                                         .S0(XLXN_46), 
                                         .S1(XLXN_47), 
                                         .O(XLXN_45[3]));
   VCC  XLXI_23 (.P(XLXN_58));
   Hexto7seg_MUSER_random2digit  XLXI_24 (.BCD(XLXN_45[3:0]), 
                                         .CLK0(XLXN_46), 
                                         .CLK1(XLXN_47), 
                                         .Comm(com[3:0]), 
                                         .seg(seg[6:0]));
   Div2_MUSER_random2digit  XLXI_25 (.CLK_IN(XLXN_8), 
                                    .CLK_OUT(XLXN_60));
   counter1_13  XLXI_26 (.Clockk(XLXN_20), 
                        .CLRR(CLR), 
                        .Q(Q3_DUMMY[3:0]));
endmodule
