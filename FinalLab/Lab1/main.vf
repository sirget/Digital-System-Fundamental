////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 11/25/2019 10:11:19
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/FinalLab/Lab1/main.vf -w C:/FinalLab/Lab1/main.sch
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module D4_16E_HXILINX_main (D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, A0, A1, A2, A3, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;
   output D8;
   output D9;
   output D10;
   output D11;
   output D12;
   output D13;
   output D14;
   output D15;

   input  A0;
   input  A1;
   input  A2;
   input  A3;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;
   reg D8;
   reg D9;
   reg D10;
   reg D11;
   reg D12;
   reg D13;
   reg D14;
   reg D15;

      always @ (A0 or A1 or A2 or A3 or E)
      begin
         if(!E)
           {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0000;
        else
        begin
           case({A3,A2,A1,A0})
             4'b0000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0001;
             4'b0001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0010;
             4'b0010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0100;
             4'b0011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_1000;
             4'b0100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0001_0000;
             4'b0101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0010_0000;
             4'b0110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0100_0000;
             4'b0111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_1000_0000;
             4'b1000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0001_0000_0000;
             4'b1001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0010_0000_0000;
             4'b1010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0100_0000_0000;
             4'b1011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_1000_0000_0000;
             4'b1100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0001_0000_0000_0000;
             4'b1101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0010_0000_0000_0000;
             4'b1110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0100_0000_0000_0000;
             4'b1111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b1000_0000_0000_0000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module NOR6_HXILINX_main (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = !(I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale 100 ps / 10 ps

module CB2RE_HXILINX_main(CEO, Q0, Q1, TC, C, CE, R);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;
   
   input 	      C;	
   input 	      CE;	
   input 	      R;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C)
     begin
	if (R)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT); 
   
endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_main (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 1ns / 1ps

module Div5_MUSER_main(CLK_IN, 
                       CLK_OUT);

    input CLK_IN;
   output CLK_OUT;
   
   wire XLXN_1;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_17;
   wire XLXN_20;
   wire CLK_OUT_DUMMY;
   
   assign CLK_OUT = CLK_OUT_DUMMY;
   FDC  XLXI_1 (.C(XLXN_12), 
               .CLR(XLXN_20), 
               .D(XLXN_13), 
               .Q(XLXN_1));
   FDC  XLXI_2 (.C(CLK_IN), 
               .CLR(XLXN_20), 
               .D(XLXN_12), 
               .Q(XLXN_17));
   INV  XLXI_4 (.I(XLXN_17), 
               .O(XLXN_12));
   INV  XLXI_8 (.I(XLXN_1), 
               .O(XLXN_13));
   FDC  XLXI_9 (.C(XLXN_13), 
               .CLR(XLXN_20), 
               .D(XLXN_14), 
               .Q(CLK_OUT_DUMMY));
   INV  XLXI_10 (.I(CLK_OUT_DUMMY), 
                .O(XLXN_14));
   AND2  XLXI_19 (.I0(CLK_OUT_DUMMY), 
                 .I1(XLXN_17), 
                 .O(XLXN_20));
endmodule
`timescale 1ns / 1ps

module Div2_MUSER_main(CLK_IN, 
                       CLK_OUT);

    input CLK_IN;
   output CLK_OUT;
   
   wire XLXN_34;
   wire XLXN_115;
   wire CLK_OUT_DUMMY;
   
   assign CLK_OUT = CLK_OUT_DUMMY;
   FDC  XLXI_5 (.C(CLK_IN), 
               .CLR(XLXN_115), 
               .D(XLXN_34), 
               .Q(CLK_OUT_DUMMY));
   INV  XLXI_10 (.I(CLK_OUT_DUMMY), 
                .O(XLXN_34));
   GND  XLXI_60 (.G(XLXN_115));
endmodule
`timescale 1ns / 1ps

module Div10_MUSER_main(CLK_IN, 
                        CLK_OUT);

    input CLK_IN;
   output CLK_OUT;
   
   wire XLXN_1;
   
   Div2_MUSER_main  XLXI_1 (.CLK_IN(CLK_IN), 
                           .CLK_OUT(XLXN_1));
   Div5_MUSER_main  XLXI_2 (.CLK_IN(XLXN_1), 
                           .CLK_OUT(CLK_OUT));
endmodule
`timescale 1ns / 1ps

module Divmain2_MUSER_main(CLK_IN, 
                           CLK_OUT);

    input CLK_IN;
   output CLK_OUT;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   
   Div2_MUSER_main  XLXI_1 (.CLK_IN(CLK_IN), 
                           .CLK_OUT(XLXN_1));
   Div10_MUSER_main  XLXI_2 (.CLK_IN(XLXN_1), 
                            .CLK_OUT(XLXN_2));
   Div10_MUSER_main  XLXI_3 (.CLK_IN(XLXN_2), 
                            .CLK_OUT(XLXN_3));
   Div10_MUSER_main  XLXI_4 (.CLK_IN(XLXN_3), 
                            .CLK_OUT(XLXN_4));
   Div10_MUSER_main  XLXI_5 (.CLK_IN(XLXN_4), 
                            .CLK_OUT(CLK_OUT));
endmodule
`timescale 1ns / 1ps

module Hex_to_7seg_MUSER_main(BCD, 
                              CLK0, 
                              CLK1, 
                              Comm, 
                              seg);

    input [3:0] BCD;
    input CLK0;
    input CLK1;
   output [3:0] Comm;
   output [6:0] seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_21;
   wire XLXN_25;
   wire XLXN_32;
   wire XLXN_36;
   
   (* HU_SET = "XLXI_1_0" *) 
   D4_16E_HXILINX_main  XLXI_1 (.A0(BCD[0]), 
                               .A1(BCD[1]), 
                               .A2(BCD[2]), 
                               .A3(BCD[3]), 
                               .E(XLXN_36), 
                               .D0(XLXN_32), 
                               .D1(XLXN_1), 
                               .D2(XLXN_11), 
                               .D3(XLXN_21), 
                               .D4(XLXN_2), 
                               .D5(XLXN_5), 
                               .D6(XLXN_6), 
                               .D7(XLXN_17), 
                               .D8(), 
                               .D9(XLXN_25), 
                               .D10(XLXN_18), 
                               .D11(XLXN_3), 
                               .D12(XLXN_8), 
                               .D13(XLXN_4), 
                               .D14(XLXN_9), 
                               .D15(XLXN_10));
   NOR4  XLXI_2 (.I0(XLXN_1), 
                .I1(XLXN_2), 
                .I2(XLXN_3), 
                .I3(XLXN_4), 
                .O(seg[0]));
   (* HU_SET = "XLXI_3_1" *) 
   NOR6_HXILINX_main  XLXI_3 (.I0(XLXN_5), 
                             .I1(XLXN_6), 
                             .I2(XLXN_3), 
                             .I3(XLXN_8), 
                             .I4(XLXN_9), 
                             .I5(XLXN_10), 
                             .O(seg[1]));
   NOR4  XLXI_4 (.I0(XLXN_11), 
                .I1(XLXN_8), 
                .I2(XLXN_9), 
                .I3(XLXN_10), 
                .O(seg[2]));
   NOR5  XLXI_5 (.I0(XLXN_1), 
                .I1(XLXN_2), 
                .I2(XLXN_17), 
                .I3(XLXN_18), 
                .I4(XLXN_10), 
                .O(seg[3]));
   (* HU_SET = "XLXI_6_2" *) 
   NOR6_HXILINX_main  XLXI_6 (.I0(XLXN_1), 
                             .I1(XLXN_21), 
                             .I2(XLXN_2), 
                             .I3(XLXN_5), 
                             .I4(XLXN_17), 
                             .I5(XLXN_25), 
                             .O(seg[4]));
   NOR5  XLXI_7 (.I0(XLXN_1), 
                .I1(XLXN_11), 
                .I2(XLXN_21), 
                .I3(XLXN_17), 
                .I4(XLXN_4), 
                .O(seg[5]));
   NOR4  XLXI_8 (.I0(XLXN_32), 
                .I1(XLXN_1), 
                .I2(XLXN_17), 
                .I3(XLXN_8), 
                .O(seg[6]));
   VCC  XLXI_23 (.P(XLXN_36));
   NAND2B2  XLXI_33 (.I0(CLK0), 
                    .I1(CLK1), 
                    .O(Comm[0]));
   NAND2B1  XLXI_34 (.I0(CLK1), 
                    .I1(CLK0), 
                    .O(Comm[1]));
   NAND2B1  XLXI_35 (.I0(CLK0), 
                    .I1(CLK1), 
                    .O(Comm[2]));
   NAND2  XLXI_36 (.I0(CLK0), 
                  .I1(CLK1), 
                  .O(Comm[3]));
endmodule
`timescale 1ns / 1ps

module main(OSC, 
            XLXN_14, 
            XLXN_15);

   (* LOC = "P123" *) 
    input OSC;
   (* LOC = "P27,P29,P32,P34,P35,P40,P41" *) 
   output [6:0] XLXN_14;
   (* LOC = "P30,P33,P43,P44" *) 
   output [3:0] XLXN_15;
   
   wire [3:0] MODE;
   wire XLXN_4;
   wire XLXN_43;
   wire XLXN_67;
   wire XLXN_69;
   wire XLXN_85;
   wire XLXN_89;
   
   Hex_to_7seg_MUSER_main  XLXI_1 (.BCD(MODE[3:0]), 
                                  .CLK0(XLXN_67), 
                                  .CLK1(XLXN_69), 
                                  .Comm(XLXN_15[3:0]), 
                                  .seg(XLXN_14[6:0]));
   (* HU_SET = "XLXI_3_3" *) 
   CB2RE_HXILINX_main  XLXI_3 (.C(XLXN_4), 
                              .CE(XLXN_43), 
                              .R(), 
                              .CEO(), 
                              .Q0(XLXN_67), 
                              .Q1(XLXN_69), 
                              .TC());
   VCC  XLXI_7 (.P(XLXN_43));
   (* HU_SET = "XLXI_9_4" *) 
   M4_1E_HXILINX_main  XLXI_9 (.D0(XLXN_89), 
                              .D1(XLXN_89), 
                              .D2(XLXN_89), 
                              .D3(XLXN_89), 
                              .E(XLXN_89), 
                              .S0(XLXN_67), 
                              .S1(XLXN_69), 
                              .O(MODE[3]));
   (* HU_SET = "XLXI_10_5" *) 
   M4_1E_HXILINX_main  XLXI_10 (.D0(XLXN_89), 
                               .D1(XLXN_85), 
                               .D2(XLXN_85), 
                               .D3(XLXN_89), 
                               .E(XLXN_89), 
                               .S0(XLXN_67), 
                               .S1(XLXN_69), 
                               .O(MODE[2]));
   (* HU_SET = "XLXI_11_6" *) 
   M4_1E_HXILINX_main  XLXI_11 (.D0(XLXN_85), 
                               .D1(XLXN_85), 
                               .D2(XLXN_89), 
                               .D3(XLXN_89), 
                               .E(XLXN_89), 
                               .S0(XLXN_67), 
                               .S1(XLXN_69), 
                               .O(MODE[1]));
   (* HU_SET = "XLXI_12_7" *) 
   M4_1E_HXILINX_main  XLXI_12 (.D0(XLXN_85), 
                               .D1(XLXN_85), 
                               .D2(XLXN_85), 
                               .D3(XLXN_89), 
                               .E(XLXN_89), 
                               .S0(XLXN_67), 
                               .S1(XLXN_69), 
                               .O(MODE[0]));
   GND  XLXI_13 (.G(XLXN_85));
   VCC  XLXI_14 (.P(XLXN_89));
   Divmain2_MUSER_main  XLXI_16 (.CLK_IN(OSC), 
                                .CLK_OUT(XLXN_4));
endmodule
